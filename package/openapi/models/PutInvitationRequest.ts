/* tslint:disable */
/* eslint-disable */
/**
 * User and Team Management API
 * API for user and team management with JWT internal
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PutInvitationRequest
 */
export interface PutInvitationRequest {
    /**
     * 
     * @type {string}
     * @memberof PutInvitationRequest
     */
    membership: PutInvitationRequestMembershipEnum;
    /**
     * 
     * @type {string}
     * @memberof PutInvitationRequest
     */
    userId: string;
}


/**
 * @export
 */
export const PutInvitationRequestMembershipEnum = {
    Active: 'ACTIVE',
    Rejected: 'REJECTED'
} as const;
export type PutInvitationRequestMembershipEnum = typeof PutInvitationRequestMembershipEnum[keyof typeof PutInvitationRequestMembershipEnum];


/**
 * Check if a given object implements the PutInvitationRequest interface.
 */
export function instanceOfPutInvitationRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "membership" in value;
    isInstance = isInstance && "userId" in value;

    return isInstance;
}

export function PutInvitationRequestFromJSON(json: any): PutInvitationRequest {
    return PutInvitationRequestFromJSONTyped(json, false);
}

export function PutInvitationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PutInvitationRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'membership': json['membership'],
        'userId': json['userId'],
    };
}

export function PutInvitationRequestToJSON(value?: PutInvitationRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'membership': value.membership,
        'userId': value.userId,
    };
}

