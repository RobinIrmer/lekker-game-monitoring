/* tslint:disable */
/* eslint-disable */
/**
 * User and Team Management API
 * API for user and team management with JWT internal
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TeamsTeamIdPutRequest
 */
export interface TeamsTeamIdPutRequest {
    /**
     * Updated team name
     * @type {string}
     * @memberof TeamsTeamIdPutRequest
     */
    teamName?: string;
    /**
     * Updated maximum member number (greater than 10)
     * @type {number}
     * @memberof TeamsTeamIdPutRequest
     */
    maxMemberNumber?: number;
}

/**
 * Check if a given object implements the TeamsTeamIdPutRequest interface.
 */
export function instanceOfTeamsTeamIdPutRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TeamsTeamIdPutRequestFromJSON(json: any): TeamsTeamIdPutRequest {
    return TeamsTeamIdPutRequestFromJSONTyped(json, false);
}

export function TeamsTeamIdPutRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamsTeamIdPutRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'teamName': !exists(json, 'teamName') ? undefined : json['teamName'],
        'maxMemberNumber': !exists(json, 'maxMemberNumber') ? undefined : json['maxMemberNumber'],
    };
}

export function TeamsTeamIdPutRequestToJSON(value?: TeamsTeamIdPutRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'teamName': value.teamName,
        'maxMemberNumber': value.maxMemberNumber,
    };
}

