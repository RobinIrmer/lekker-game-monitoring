/* tslint:disable */
/* eslint-disable */
/**
 * User and Team Management API
 * API for user and team management with JWT internal
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface GetTeamMembersResponse
 */
export interface GetTeamMembersResponse {
    /**
     * 
     * @type {string}
     * @memberof GetTeamMembersResponse
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof GetTeamMembersResponse
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof GetTeamMembersResponse
     */
    totalScore?: number;
    /**
     * 
     * @type {number}
     * @memberof GetTeamMembersResponse
     */
    member?: number;
    /**
     * 
     * @type {number}
     * @memberof GetTeamMembersResponse
     */
    availableMember?: number;
    /**
     * 
     * @type {Array<User>}
     * @memberof GetTeamMembersResponse
     */
    members?: Array<User>;
}

/**
 * Check if a given object implements the GetTeamMembersResponse interface.
 */
export function instanceOfGetTeamMembersResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetTeamMembersResponseFromJSON(json: any): GetTeamMembersResponse {
    return GetTeamMembersResponseFromJSONTyped(json, false);
}

export function GetTeamMembersResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetTeamMembersResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'totalScore': !exists(json, 'totalScore') ? undefined : json['totalScore'],
        'member': !exists(json, 'member') ? undefined : json['member'],
        'availableMember': !exists(json, 'availableMember') ? undefined : json['availableMember'],
        'members': !exists(json, 'members') ? undefined : ((json['members'] as Array<any>).map(UserFromJSON)),
    };
}

export function GetTeamMembersResponseToJSON(value?: GetTeamMembersResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'totalScore': value.totalScore,
        'member': value.member,
        'availableMember': value.availableMember,
        'members': value.members === undefined ? undefined : ((value.members as Array<any>).map(UserToJSON)),
    };
}

